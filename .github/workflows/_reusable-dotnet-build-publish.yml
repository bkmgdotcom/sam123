name: _Reusable Build NodeJS application

on:
  workflow_call:
    inputs:
      RUNS_ON:
        description: Platform to execute on
        type: string
        default: ubuntu-latest      
      JF_ARTIFACTORY_URL:
        description: JFrog Artifactory URL
        type: string
        default: https://your-jfrog-instance.jfrog.io/artifactory
        required: true  
      JF_PROJECT:
        description: JFrog Artifactory project
        type: string
        default: my-project
      JF_APP_NAME:
        description: JFrog Artifactory application name
        type: string
        default: my-app
      JF_DOTNET_LOCAL_REPOSITORY:
        description: Local dotnet repository
        type: string
        default: dotnet-local
      JF_DOTNET_REMOTE_REPOSITORY:
        description: Remote dotnet repository
        type: string
        default: dotnet-remote
      JF_PACKAGE_TAG:
        description: Remote dotnet repository
        type: string
        default: dotnet-remote
      JF_DOTNET_VERSION:
        description: JFrog Artifactory .NET version
        type: string
        default: 8.0.x
      JF_WORKING_DIRECTORY:
        description: Working directory for the build
        type: string
        default: dotnet-examples/multi-example
    secrets:
      JF_ACCESS_TOKEN:
        required: true

jobs:
  build:
    name: Build NodeJS app
    env:
      JF_ACCESS_TOKEN: ${{ secrets.JF_ACCESS_TOKEN }}
      JF_ARTIFACTORY_URL: ${{ inputs.JF_ARTIFACTORY_URL }}
      JF_NPM_LOCAL_REPOSITORY: ${{ inputs.JF_NPM_LOCAL_REPOSITORY }}
      JF_NPM_REMOTE_REPOSITORY: ${{ inputs.JF_NPM_REMOTE_REPOSITORY }}
      JF_APP_NAME: ${{ inputs.JF_APP_NAME }}
      JF_PROJECT: ${{ inputs.JF_PROJECT }}
      JF_PACKAGE_TAG: ${{ inputs.JF_PACKAGE_TAG }}
      JF_DOTNET_VERSION: ${{ inputs.JF_DOTNET_VERSION }}
      JF_WORKING_DIRECTORY: ${{ inputs.JF_WORKING_DIRECTORY }}

    runs-on: ${{ inputs.RUNS_ON }}

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ inputs.JF_DOTNET_VERSION }}

      - name: Install jfrog cli
        uses: jfrog/setup-jfrog-cli@v4
        env:
          JF_URL: ${{ env.JF_ARTIFACTORY_URL }}
          JF_ACCESS_TOKEN: ${{ secrets.JF_ACCESS_TOKEN }}
          JF_PROJECT: ${{ env.JF_PROJECT }}

      - name: Check environmental variables
        if: ${{ always() }}
        run: printenv | sort -f

      - name: JFrog NPM Configuration
        run: |
          cd ${{ env.JF_WORKING_DIRECTORY }}
          jf dotnet-config --repo-resolve=${{ env.JF_DOTNET_REMOTE_REPOSITORY }}
          pwd
          jf dotnet restore --build-name=${{ env.JF_APP_NAME }} --build-number=${{ env.JF_PACKAGE_TAG }}
          jf audit --project ${{ env.JF_PROJECT }} 
          dotnet pack
          jf rt u "*.nupkg" ${{ env.JF_DOTNET_LOCAL_REPOSITORY }} --build-name=${{ env.JF_APP_NAME }} --build-number=${{ env.JF_PACKAGE_TAG }} --project ${{ env.JF_PROJECT }} 
          jf rt bce --project ${{ env.JF_PROJECT }} ${{ env.JF_APP_NAME }} ${{ env.JF_PACKAGE_TAG }}
          jf rt bp  --project ${{ env.JF_PROJECT }} ${{ env.JF_APP_NAME }} ${{ env.JF_PACKAGE_TAG }}

